################################################################################
##
## Filename: 	memsdev.txt
## {{{
## Project:	ArrowZip, a demonstration of the Arrow MAX1000 FPGA board
##
## Purpose:	Describes the MEMS controller
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2018-2021, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=mems
@NADDR=256
@ACCESS=MEMS_ACCESS
@SLAVE.TYPE=DOUBLE
@SLAVE.BUS=wb
@INT.MEMSA.WIRE= mems_int_a
@INT.MEMSA.PIC=  buspic
@INT.MEMSB.WIRE= mems_int_b
@INT.MEMSB.PIC=  buspic
@INT.MEMSDONE.WIRE= mems_done
@INT.MEMSDONE.PIC=  buspic
@MAIN.PORTLIST=
		// Top level MEMS (SPI) I/O ports
		o_mems_cs_n, o_mems_sck, o_mems_mosi, i_mems_miso, i_mems_int
@MAIN.IODECL=
	// MEMS SPI
	output	wire		o_mems_cs_n, o_mems_sck, o_mems_mosi;
	input	wire		i_mems_miso;
	input	wire	[1:0]	i_mems_int;
@MAIN.DEFNS=
	wire	[1:0]		mems_int;
	wire	[31:0]		mems_debug;
@MAIN.INSERT=
	mems @$(PREFIX)i(i_clk, i_reset,
		(wb_cyc), (wb_stb)&&(mems_sel), wb_we,
			wb_addr[7:0], wb_data,
			mems_ack, mems_stall, mems_data,
				mems_int, mems_done,
			o_mems_cs_n, o_mems_sck,
				o_mems_mosi, i_mems_miso,
			i_mems_int, mems_debug);
	assign	mems_int_a = mems_int[0];
	assign	mems_int_b = mems_int[1];
@MAIN.ALT=
	assign	o_mems_sck  = 1'b1;
	assign	o_mems_cs_n = 1'b1;
	assign	o_mems_mosi = 1'b1;
@DEVID=MEMS
@REGDEFS.H.DEFNS=
// No defines yet
@REGS.NOTE= // MEMS register(s)
@REGS.N=36
@REGS.0=  0 R_@$(DEVID) $(DEVID)
@REGS.1=  7 R_MEMSAUX   MEMSAUX
@REGS.2= 15 R_@$(DEVID)_WHOAMI @$(DEVID)WHOAMI WHOAMI
@REGS.3= 72 R_ADC1		ADC1
@REGS.4= 74 R_ADC2		ADC2
@REGS.5= 76 R_ADC3		ADC3
@REGS.6= 30 R_MEMSCTRL0		MEMSCTRL0
@REGS.7= 32 R_MEMSCTRL1		MEMSCTRL1
@REGS.8= 33 R_MEMSCTRL2		MEMSCTRL2
@REGS.9= 34 R_MEMSCTRL3		MEMSCTRL3
@REGS.10= 35 R_MEMSCTRL4	MEMSCTRL4
@REGS.11= 36 R_MEMSCTRL5	MEMSCTRL5
@REGS.12= 37 R_MEMSCTRL6	MEMSCTRL6
@REGS.13= 38 R_MEMSREF		MEMSREF
@REGS.14= 39 R_MEMSSTAT		MEMSSTAT
@REGS.15= 92 R_MEMSX		MEMSX
@REGS.16= 94 R_MEMSY		MEMSY
@REGS.17= 94 R_MEMSZ		MEMSZ
@REGS.18= 46 R_MEMSFIFOC	MEMSFIFOC
@REGS.19= 47 R_MEMSFIFOS	MEMSFIFOS
@REGS.20= 48 R_MEMSINT1C	MEMSINT1C
@REGS.21= 49 R_MEMSINT1S	MEMSINT1S
@REGS.22= 50 R_MEMSINT1TH	MEMSINT1TH
@REGS.23= 51 R_MEMSINT1D	MEMSINT1D
@REGS.24= 52 R_MEMSINT2C	MEMSINT2C
@REGS.25= 53 R_MEMSINT2S	MEMSINT2S
@REGS.26= 54 R_MEMSINT2TH	MEMSINT2TH
@REGS.27= 55 R_MEMSINT2D	MEMSINT2D
@REGS.28= 56 R_MEMSCKCFG	MEMSCKCFG
@REGS.29= 57 R_MEMSCKSRC	MEMSCKSRC
@REGS.30= 58 R_MEMSCKTHS	MEMSCKTHS
@REGS.31= 59 R_MEMSTMLIMIT	MEMSTMLIMIT
@REGS.32= 60 R_MEMSLATENCY	MEMSLATENCY
@REGS.33= 61 R_MEMSWINDOW	MEMSWINDOW
@REGS.34= 62 R_MEMSACTTHS	MEMSACTTHS
@REGS.35= 63 R_MEMSACTDUR	MEMSACTDUR
@BDEF.DEFN=
#define	R_MEMSAUX	7
#define	R_MEMSWHOAMI	15
#define	R_MEMSADC1	72
#define	R_MEMSADC2	74
#define	R_MEMSADC3	76
#define	R_MEMSCTRL0	30
#define	R_MEMSCTRL1	32
#define	R_MEMSCTRL2	33
#define	R_MEMSCTRL3	34
#define	R_MEMSCTRL4	35
#define	R_MEMSCTRL5	36
#define	R_MEMSCTRL6	37
#define	R_MEMSREF	38
#define	R_MEMSSTAT	39
#define	R_MEMSX		92
#define	R_MEMSY		94
#define	R_MEMSZ		96
#define	R_MEMSFIFOC	46
#define	R_MEMSFIFOS	47
#define	R_MEMSINT1C	48
#define	R_MEMSINT1S	49
#define	R_MEMSINT1TH	50
#define	R_MEMSINT1D	51
#define	R_MEMSINT2C	52
#define	R_MEMSINT2S	53
#define	R_MEMSINT2TH	54
#define	R_MEMSINT2D	55
#define R_MEMSCKCFG	56
#define R_MEMSCKSRC	57
#define R_MEMSCKTHS	58
#define R_MEMSTMLIMIT	59
#define R_MEMSLATENCY	60
#define R_MEMSWINDOW	61
#define R_MEMSACTTHS	62
#define R_MEMSACTDUR	63
//
typedef	struct	S_MEMS {
	int	rd[128];
	int	wr[128];
} MEMS;
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE=MEMS
@BDEF.OSDEF=_BOARD_HAS_MEMS_SENSOR
@BDEF.OSVAL=static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME) = ((@$BDEF.IOTYPE *)@$[0x%08x](REGBASE));
@REGDEFS.H.INSERT=

# @SIM.INCLUDE+=
# #include "memssim.h"
# @SIM.DEFNS+=
# #ifdef	@$(ACCESS)
# 	QSPIFLASHSIM	*m_@$(MEM.NAME);
# #endif
# @SIM.INIT+=
# #ifdef	@$(ACCESS)
# 	m_@$(DEVID) = new @$(DEVID);
# #endif
# @SIM.TICK +=
# #ifdef	@$(ACCESS)
#		m_core->i_qspi_dat = (*m_@$(MEM.NAME))(m_core->o_qspi_cs_n,
#			m_core->o_qspi_sck, m_core->o_qspi_dat);
# #endif
#
#
@RTL.MAKE.GROUP= MEMS
@RTL.MAKE.FILES= mems.v
